{"version":3,"sources":["components/Result/Result.jsx","assets/sounds/single.wav","assets/sounds/return.wav","components/Text/Text.jsx","components/Header/Header.jsx","App.js","index.js"],"names":["Result","count","className","characterCount","wordCount","sentenceCount","paragraphCount","bigramsUnqiueCount","Text","useState","words","setWords","setCount","useEffect","handleCount","handleWordCount","wordArray","split","length","pop","handleSentenceCount","matchArray","match","handleParagraphCount","lineArray","handleUnqieNGramCount","n","replace","toLowerCase","map","i","key","slice","e","counter","placeholder","onChange","target","value","onKeyDown","Audio","TypeReturn","play","TypeSingle","Button","variant","onClick","speech","Speech","init","volume","lang","rate","pitch","voice","splitSentences","listeners","onvoiceschanged","voices","then","data","speak","text","Header","App","Container","Row","Col","ReactDOM","render","document","getElementById"],"mappings":"kSAmBeA,MAhBf,YAA0B,IAATC,EAAQ,EAARA,MAEb,OACI,qBAAKC,UAAU,mBAAf,SACI,qBAAIA,UAAU,YAAd,UACI,mDAAsBD,EAAME,kBAC5B,8CAAiBF,EAAMG,aACvB,kDAAqBH,EAAMI,iBAC3B,mDAAsBJ,EAAMK,kBAC5B,wDAA2BL,EAAMM,4B,wBCZlC,MAA0B,mCCA1B,MAA0B,mCCqJ1BC,MA5If,WAEI,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOR,EAAP,KAAcW,EAAd,KAGAC,qBAAU,WACNC,MACD,CAACJ,IAGJ,IAwBMK,EAAkB,WACpB,IAAIC,EAAYN,EAAMO,MAAM,QAI5B,MADsC,KAAlCD,EAAUA,EAAUE,OAAO,IAAWF,EAAUG,MAC7CH,EAAUE,QAIfE,EAAsB,WACxB,IAAIC,EAOJ,OAAkB,QANlBA,EAAaX,EAAMY,MAAM,mBAOfD,EAAWH,OAEd,GAILK,EAAuB,WACzB,IAAIC,EAAYd,EAAMO,MAAM,QAI5B,MADsC,KAAlCO,EAAUA,EAAUN,OAAO,IAAWM,EAAUL,MAC7CK,EAAUN,QAIfO,EAAwB,SAACf,EAAOgB,GAClChB,EAAQA,EAAMiB,QAAS,kBAAoB,IAAIC,cAAcX,MAAM,KAEnE,IADA,IAAIY,EAAM,GACFC,EAAE,EAAGA,GAAGpB,EAAMQ,OAAOQ,EAAGI,IAAI,CAClC,IAAIC,EAAMrB,EAAMsB,MAAMF,EAAGA,EAAEJ,GAC3BG,EAAIE,GAAOF,EAAIE,KAASF,EAAIE,GAAO,EAGrC,IAAI9B,EAAQ,EACZ,IAAI,IAAI8B,KAAOF,EACG,IAAbA,EAAIE,IAAY9B,IAErB,OAAOA,GAILa,EAAc,SAACmB,GACjB,IAAMC,EAAU,CACZ/B,eAvDGO,EAAMQ,OAwDTd,UAAWW,IACXV,cAAee,IACfd,eAAgBiB,IAChBhB,mBAAoBkB,EAAsBf,EAAO,IAErDE,EAASsB,IA6Bb,OACI,sBAAKhC,UAAU,iBAAf,UACI,0BACIA,UAAU,aACViC,YAAY,kBACZC,SArGa,SAACH,GACtBtB,EAASsB,EAAEI,OAAOC,QAqGVA,MAAO5B,EACP6B,UAhHU,SAACN,GACN,UAAVA,EAAEF,IACD,IAAIS,MAAMC,GAAYC,OAEtB,IAAIF,MAAMG,GAAYD,UA8GtB,sBAAKxC,UAAU,eAAf,UACI,cAAC0C,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAxHlB,WAChBnC,EAAS,KAuHD,mBACA,cAACiC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QApCpB,WACd,IAAMC,EAAS,IAAIC,IACfD,EAAOE,KAAK,CACRC,OAAQ,GACRC,KAAM,QACNC,KAAM,EACNC,MAAO,EACPC,MAAM,2BACNC,gBAAgB,EAChBC,UAAW,CACPC,gBAAiB,SAAAC,QAItBC,MAAK,SAAAC,GACJb,EAAOc,MAAM,CACLC,KAAMpD,GAAgB,4BAoB9B,uBAGJ,cAAC,EAAD,CAAQT,MAAOA,Q,MCjIZ8D,MAZf,WACI,OACI,sBAAK7D,UAAU,mBAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,OAAf,eACA,qBAAKA,UAAU,MAAf,kBAEJ,oBAAIA,UAAU,QAAd,gC,wBCYG8D,MAbf,WACE,OACE,sBAAK9D,UAAU,MAAf,UAEA,cAAC,EAAD,IACE,cAAC+D,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,eAAM,eAACC,EAAA,EAAD,eAAM,cAAC,EAAD,IAAN,OAAN,a,MCRRC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.0d34625b.chunk.js","sourcesContent":["import React from 'react'\nimport './Result.scss'\n\nfunction Result({count}) {\n\n    return (\n        <div className='result-container'>\n            <ul className='countList'>\n                <li>Character Count: {count.characterCount}</li>\n                <li>Word Count: {count.wordCount}</li>\n                <li>Sentence Count: {count.sentenceCount}</li>\n                <li>Paragraph Count: {count.paragraphCount}</li>\n                <li>Bigrams Unique Count: {count.bigramsUnqiueCount}</li>\n            </ul>\n           \n        </div>\n    )\n}\n\nexport default Result\n","export default __webpack_public_path__ + \"static/media/single.8c23b584.wav\";","export default __webpack_public_path__ + \"static/media/return.d2a677db.wav\";","import React,{useEffect, useState} from 'react'\nimport './Text.scss'\nimport Result from '../Result/Result'\nimport Speech from 'speak-tts' \nimport Button from 'react-bootstrap/Button'\nimport TypeSingle from '../../assets/sounds/single.wav'\nimport TypeReturn from '../../assets/sounds/return.wav'\n\n\nfunction Text() {\n\n    const [words, setWords] = useState('')\n    const [count, setCount] = useState({})\n\n\n    useEffect(() => {\n        handleCount()\n    }, [words])\n \n\n    const handleClear = () => {\n        setWords('')\n    }\n\n\n    const handleKeyDown = (e) =>{\n        if(e.key === 'Enter'){\n            new Audio(TypeReturn).play()\n        }else{\n            new Audio(TypeSingle).play()\n        }\n    }\n\n\n    const handleTextChange = (e) => {\n        setWords(e.target.value)\n    }\n\n\n    const handleCharacterCount = () => {\n        return words.length\n    }\n\n\n    const handleWordCount = () => {\n        let wordArray = words.split(/\\s+/g)\n        // \\s+ - one or more whitespace \n\n        if (wordArray[wordArray.length-1] === \"\") wordArray.pop()\n        return wordArray.length\n    }\n\n\n    const handleSentenceCount = () => {\n        let matchArray\n        matchArray = words.match(/\\w[.?!](\\s|$)/g)\n        // \\w - Word character\n        // \\[.?!] - Punctuation as specified.\n        // (\\s|$) - Whitespace character OR the end of the string.\n        // g - to perform a global match\n\n        if(matchArray !== null){\n           return matchArray.length\n        }\n        return 0\n    }\n\n\n    const handleParagraphCount = () => {\n        let lineArray = words.split(/\\n+/g)\n        // \\n+ - one or more newline\n\n        if (lineArray[lineArray.length-1] === \"\") lineArray.pop()\n        return lineArray.length\n    }\n\n\n    const handleUnqieNGramCount = (words, n) => {\n        words = words.replace((/[^a-zA-Z0-9\\s]/g), '').toLowerCase().split(\" \")\n        let map = {}\n        for(let i=0; i<=words.length-n; i++){\n          let key = words.slice(i, i+n)\n          map[key] ? map[key]++ : map[key] = 1\n        }\n\n        let count = 0\n        for(let key in map){\n          if(map[key] === 1) count++\n        }\n        return count\n    }\n\n\n    const handleCount = (e) => {\n        const counter = {\n            characterCount: handleCharacterCount(),\n            wordCount: handleWordCount(),\n            sentenceCount: handleSentenceCount(),\n            paragraphCount: handleParagraphCount(),\n            bigramsUnqiueCount: handleUnqieNGramCount(words, 2)\n        }\n        setCount(counter)\n    }\n\n    \n    const speechTTS = () => {\n        const speech = new Speech();\n            speech.init({\n                volume: 0.5,\n                lang: \"en-GB\",\n                rate: 1,\n                pitch: 1,\n                voice:'Google UK English Female',\n                splitSentences: true,\n                listeners: {\n                    onvoiceschanged: voices => {\n                    // console.log(\"Voices changed\", voices);\n                    }\n                }\n            }).then(data => {\n                speech.speak({\n                        text: words ? words : \"PLease enter a text\"\n                    })\n            })\n    }\n\n\n\n\n    // console.log(handleUnqieNGramCount(words, 2))\n    return (\n        <div className='text-container'> \n            <textarea \n                className='word-field' \n                placeholder='Enter Text Here'\n                onChange={handleTextChange}\n                value={words}\n                onKeyDown={handleKeyDown}\n            ></textarea>\n            <div className='buttonOption'>\n                <Button variant=\"warning\" onClick={handleClear}>Clear</Button>\n                <Button variant=\"success\" onClick={speechTTS}>Listen</Button>\n            </div>\n      \n            <Result count={count}/> \n        </div>\n    )\n}\n\nexport default Text\n\n\n","import React from 'react'\nimport './Header.scss'\n\nfunction Header() {\n    return (\n        <div className='header-container'>\n            <div className='animation-container'>\n                <div className='zero'>0</div>\n                <div className='one'>1</div>\n            </div>\n            <h1 className='title'> Word Counter </h1>\n        </div>\n    )\n}\n\nexport default Header\n","import './App.css';\nimport React from 'react'\nimport Text from './components/Text/Text'\nimport Header from './components/Header/Header'\nimport {Container, Row, Col} from 'react-bootstrap'\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n    <Header />\n      <Container>     \n        <Row> <Col> <Text/> </Col> </Row>\n      </Container>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}